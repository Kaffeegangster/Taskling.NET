<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{78CD1BFB-6534-4F78-B2FB-C9E942D7C2FA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Taskling.SqlServer.IntegrationTest</RootNamespace>
    <AssemblyName>Taskling.SqlServer.IntegrationTest</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="Contexts\Given_ObjectBlockContext\MyComplexClass.cs" />
    <Compile Include="Contexts\Given_ObjectBlockContext\When_GetObjectBlocksFromExecutionContext.cs" />
    <Compile Include="Contexts\Given_RangeBlockContext\When_GetRangeBlocksFromExecutionContext.cs" />
    <Compile Include="Contexts\Given_TaskExecutionContext\MyHeader.cs" />
    <Compile Include="Contexts\Given_TaskExecutionContext\WhenDisposed.cs" />
    <Compile Include="Contexts\Given_TaskExecutionContext\When_Blocked.cs" />
    <Compile Include="Contexts\Given_TaskExecutionContext\When_Checkpoint.cs" />
    <Compile Include="Contexts\Given_TaskExecutionContext\When_GetLastExecutionMeta.cs" />
    <Compile Include="Contexts\Given_TaskExecutionContext\When_Start.cs" />
    <Compile Include="Contexts\PersonDto.cs" />
    <Compile Include="Contexts\StressTest\TasklingStressTest.cs" />
    <Compile Include="Contexts\TestHeader.cs" />
    <Compile Include="Contexts\Given_ListBlockContext\When_ConcurrentIsThreadSafe.cs" />
    <Compile Include="Contexts\Given_ListBlockContext\When_GetListBlocksFromExecutionContext.cs" />
    <Compile Include="Contexts\Given_ListBlockContext\When_GetListBlocksWithHeaderFromExecutionContext.cs" />
    <Compile Include="Helpers\BlocksHelper.cs" />
    <Compile Include="Helpers\ClientHelper.cs" />
    <Compile Include="Helpers\ExecutionsHelper.cs" />
    <Compile Include="Helpers\TaskExecutionStatus.cs" />
    <Compile Include="Helpers\TestConfigurationReader.cs" />
    <Compile Include="Helpers\TestConstants.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Repositories\Given_BlockRepository\When_FindDeadBlocks.cs" />
    <Compile Include="Repositories\Given_BlockRepository\When_FindFailedBlocks.cs" />
    <Compile Include="Repositories\Given_CriticalSectionService\When_TryStart_AsKeepAliveMode.cs" />
    <Compile Include="Repositories\Given_CriticalSectionService\When_TryStart_AsOverrideAfterElaspedTimeMode.cs" />
    <Compile Include="Repositories\Given_ListBlockRepository\DateRange.cs" />
    <Compile Include="Repositories\Given_ListBlockRepository\When_GetLastListBlock.cs" />
    <Compile Include="Repositories\Given_ObjectBlockRepository\When_ChangeStatus.cs" />
    <Compile Include="Repositories\Given_ObjectBlockRepository\When_GetLastObjectBlock.cs" />
    <Compile Include="Repositories\Given_RangeBlockRepository\When_ChangeStatus.cs" />
    <Compile Include="Repositories\Given_RangeBlockRepository\When_GetLastDateRangeBlock.cs" />
    <Compile Include="Repositories\Given_RangeBlockRepository\When_GetLastNumericRangeBlock.cs" />
    <Compile Include="Repositories\Given_TaskExecutionService\When_TryStart_AsKeepAliveMode.cs" />
    <Compile Include="Repositories\Given_TaskExecutionService\When_TryStart_AsOverrideAfterElaspedTimeMode.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Taskling.SqlServer\Taskling.SqlServer.csproj">
      <Project>{9ba0520d-d75d-474c-b495-b0852f01620b}</Project>
      <Name>Taskling.SqlServer</Name>
    </ProjectReference>
    <ProjectReference Include="..\Taskling\Taskling.csproj">
      <Project>{cbf76acc-eb9b-42e7-a681-fa02558e08e4}</Project>
      <Name>Taskling</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>